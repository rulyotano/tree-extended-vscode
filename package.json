{
  "name": "tree-extended-vscode",
  "displayName": "tree-extended-vscode",
  "description": "Extension for getting the text tree for a directory with a lot of options",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.65.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:tree-extended-vscode.helloWorld",
    "onCommand:tree-extended-vscode.getTreeRepresentation"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "tree-extended-vscode.helloWorld",
        "title": "Hello World"
      },
      {
        "command": "tree-extended-vscode.getTreeRepresentation",
        "title": "Get tree representation"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "when": "explorerResourceIsFolder",
          "command": "tree-extended-vscode.getTreeRepresentation",
          "alt": "markdown.showPreviewToSide",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "Tree Extended",
      "properties": {
        "treeExtended.showNotEmptyDirectoryIndicator": {
          "description": "When the directory tree is pruned at the maximum deep we can show an indicator ('...') which means the directory is not empty",
          "type": "boolean",
          "default": true,
          "order": 0
        },
        "treeExtended.charset": {
          "description": "Charset used to render the directory tree",
          "type": "string",
          "default": "utf8-icons",
          "enum": ["ascii", "utf8", "utf8-icons"],
          "enumDescriptions": [
            "Ascii classic charset. Compatible with old system and consoles",
            "Utf8 charset. Use other characters that are not defined in ascii which make it better to understand",
            "Utf8 with icons. Same characters than utf8, but also include fancy icons to easily differentiate between directories and files"
          ],
          "order": 1
        },
        "treeExtended.gitignore": {
          "description": "Ignore files and directories defined in the .gitignore file",
          "type": "boolean",
          "default": true,
          "order": 2
        },        
        "treeExtended.default.maxLevel": {
          "description": "The maximum deep level the generated directory tree will have",
          "type": "integer",
          "default": 2,
          "order": 3
        },
        "treeExtended.default.ignore": {
          "description": "Filter to exclude folders or files in an optional tree level, e.g.: 'window, 0:red cat, 1:blue sky'",
          "markdownDescription": "Filter to exclude folders or files in an optional tree level. Pattern: `[level1:]folder/file name1,  [level2:]folder/file name2, ...`, e.g.: `window, 0:red cat, 1:blue sky`. See more details and examples at (tree-extended)[https://www.npmjs.com/package/tree-extended]",
          "type": "string",
          "default": "",
          "order": 4
        },
        "treeExtended.default.only": {
          "description": "Filter to only include folders or files in an optional tree level, e.g.: 'window, 0:red cat, 1:blue sky'",
          "markdownDescription": "Filter to only include folders or files in an optional tree level. Pattern: `[level1:]folder/file name1,  [level2:]folder/file name2, ...`, e.g.: `window, 0:red cat, 1:blue sky`. See more details and examples at (tree-extended)[https://www.npmjs.com/package/tree-extended]",
          "type": "string",
          "default": "",
          "order": 5
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "yarn run compile-tests && yarn run compile && yarn run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.0",
    "@types/node": "14.x",
    "@types/vscode": "^1.65.0",
    "@typescript-eslint/eslint-plugin": "^5.12.1",
    "@typescript-eslint/parser": "^5.12.1",
    "@vscode/test-electron": "^2.1.2",
    "eslint": "^8.9.0",
    "glob": "^7.2.0",
    "mocha": "^9.2.1",
    "ts-loader": "^9.2.6",
    "typescript": "^4.5.5",
    "webpack": "^5.69.1",
    "webpack-cli": "^4.9.2"
  },
  "dependencies": {
    "tree-extended": "^4.2.0"
  }
}
